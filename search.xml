<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title></title>
      <url>%2F2016%2F12%2F13%2F%E9%97%AD%E5%8C%85%2F</url>
      <content type="text"><![CDATA[title: 闭包date: 2014-11-01 20:10:33categories: studying logtags: 涉及到循环变量时的闭包 1234567891011121314151617181920212223242526&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;/head&gt; &lt;body&gt; &lt;div class = 'clickBox'&gt;1&lt;/div&gt; &lt;div class = 'clickBox'&gt;2&lt;/div&gt; &lt;div class = 'clickBox'&gt;3&lt;/div&gt; &lt;script&gt; // for循环中， i每一次赋值，都对应一个新的函数，每一个函数都创建一个独立的空间。 // return 的小函数中要打印变量，但是该变量不在本函数作用域内。所以去上一级中查找。 // 因此，每一次遍历，都得到一个新的函数，并添加新的点击事件。function iteratorFactory(i)&#123; var onclick = function(e)&#123; console.log(i) &#125; return onclick;&#125;var clickBoxs = document.querySelectorAll('.clickBox')for (var i = 0; i &lt; clickBoxs.length; i++)&#123; clickBoxs[i].onclick = iteratorFactory(i)&#125; &lt;/script&gt; &lt;/body&gt;&lt;/html&gt;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[哈哈哈]]></title>
      <url>%2F2016%2F12%2F02%2F%E5%93%88%E5%93%88%E5%93%88%2F</url>
      <content type="text"></content>
    </entry>

    
    <entry>
      <title><![CDATA[我的文字]]></title>
      <url>%2F2016%2F12%2F02%2F%E6%88%91%E7%9A%84%E6%96%87%E5%AD%97%2F</url>
      <content type="text"></content>
    </entry>

    
    <entry>
      <title><![CDATA[镜中花]]></title>
      <url>%2F2016%2F12%2F01%2F%E9%95%9C%E4%B8%AD%E8%8A%B1%2F</url>
      <content type="text"><![CDATA[啊啊啊]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[前端开发]]></title>
      <url>%2F2016%2F11%2F30%2F%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%2F</url>
      <content type="text"><![CDATA[什么是前端？当今，业内人员提出web3.0时代 ：最常见的解释：网站内的信息可以直接和其他网站相关信息进行交互，能通过第三方信息平台同时对多家网站的信息进行整合使用；用户在互联网上拥有自己的数据，并能在不同网站上使；完全基于 web， 用浏览器即可实现复杂系统程序才能实现的系统功能；用户数据审计之后，同步于网路数据。 在 web3.0时代，前端又是什么呢？ “前端工程师”又能做些什么呢： 又能给 web 带来什么呢？ 避免迷失要时常问自己： 我在学什么 我学会了什么 我为什么学这些 我还需要学什么 入行前： 我能做什么 我不能做什么 我的优势是什么 我的劣势是什么 做前端对我有何好处 做前端我要付出何种代价 我能不能坚持做下去 学前端之前，了解 web 工程师 应该具备的技能： 招聘网站要求的：就是我应该学的，我应该会的比如： - 基础知识： * HTML * CSS : 能得心应手的将设计师的Web页面切出来（将PSD设计图转换成Web静态页面） * 熟练的处理各浏览器的兼容 * Web页面符合W3C标准和语义化的规范 * JavaScript : 拿下JavaScript之后 (静态页面上添加交互效果，也能更好的处理业务逻辑。让你的工作得心应手) (必须对这三门语言都很熟悉) --到了这个时候，你会发现，你可以慢慢的脱离写原始的HTML结构； 你也会发现，你可以更好的积累，在其他项目中复用自己积累的代码。 你也会发现，原来这些框架的学习并没有当初想象的那么复杂 - 继续深入去学习各种JavaScript的框架 -比如 ： * React * Vue ------------------ - 未知的： * 工作流 * 面对工程化 ------------------ * angular 做的单页面 * 配合使用 webpack 和 gulp * 页面重构 前端工程师应该具备快速学习能力 。 没有快速学习能力，你就跟不上Web发展的步伐。 学的方式就是不断的看书，写代码。 如果你的自学能力不是非常强，也不知道如何学习。那么建议你看一些视频，因为这些视频可以帮助你更好的理解，也能让你更形象的看到相关知识点得到的效果。当然，并不是只看视频就能解决所有问题，你还是需要配合书本的知识和写代码结合起来。然后从中找到适合自己的学习方法，为后面学习打下较好的基础。 不管是怎么学习，经过一段时间之后，需要开始沉淀自己，也要开始去思考： 不管是怎么学习，经过一段时间之后，需要开始沉淀自己，也要开始去思考： 我掌握了什么？ 哪些似懂非懂？ 哪些不懂？有了这三份清单，你会又有了新的目标，针对清单上的去做总结，去把似懂不懂和不懂的搞懂。这样的过程应该伴随你整个学习或者说职业生涯。只有这样，你才不会迷失方向，才能让自己变得更强大。 如何解决学习过程中碰到的问题搜索引擎是解决问题最好方式 使用Google搜索引擎 （需要知道怎么翻墙使用Google），经验告诉我，Google能更好的定位到你需要的答案。另外在搜索相关问题时，更建议你采用英文搜索，如果你不知道怎么用英文来描述你的问题，其实不难，可以利用翻译工具帮你翻译，然后在Google中搜索，这样会让你变得更轻松。 除此之外，如果你身边有更多的同学，你可以考虑先问身边的同学。只不过很多同学很害羞，不好意思问。更有不少同学，担心问身边的同学，怕会被BS，其实并非如此，这一切只是你自己的想法而以，你应该厚着脸皮不断去问。而事实上，我们前端圈的氛围是很良好的，很多同学都愿意为你解答，或者告诉你方法怎么去解决问题。 无论从哪个方面讲，我都觉得前端工程师是计算机科学职业领域中最复杂的一个工种。绝大多数传统的编程思想已经不适用了，为了在多种平台中使用，多种技术都借鉴了大量软科学的知识和理念。成为优秀前端工程师所要具备的专业技术，涉及到广阔而复杂的领域，这些领域又会因为你最终必须服务的各方的介入而变得更加复杂。专业技术可能会引领你进入成为前端工程师的大门，但只有运用该技术创造的应用程序以及你跟他人并肩协同的能力，才会真正让你变得优秀。 文章出处： 大漠常用昵称“大漠”，W3CPlus,Sass中国创始人，目前就职于手淘。中国Drupal社区核心成员之一。对HTML5、CSS3和Sass等前端脚本语言有非常深入的认识和丰富的实践经验，尤其专注对CSS3的研究，是国内最早研究和使用CSS3技术的一批人。CSS3、Sass和Drupal中国布道者。2014年出版《图解CSS3：核心技术与案例实战》。文章链接]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2F2014%2F11%2F01%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[我的第一篇博客]]></title>
      <url>%2F2012%2F12%2F02%2F%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%2F</url>
      <content type="text"><![CDATA[这里是正文你把日期写的那么早干什么？ 上面这个是“阅读全文”的分割点]]></content>
    </entry>

    
  
  
</search>
